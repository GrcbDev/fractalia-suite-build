{"version":3,"sources":["./node_modules/ret/lib/types.js","./src/app/components/common/password-strength/password-strength.component.ts","./src/app/components/common/password-strength/password-strength.component.html","./node_modules/randexp/lib/randexp.js","./node_modules/@babel/runtime/helpers/createClass.js","./node_modules/ret/lib/index.js","./node_modules/ret/lib/positions.js","./node_modules/drange/lib/index.js","./node_modules/@babel/runtime/helpers/classCallCheck.js","./node_modules/ret/lib/sets.js","./node_modules/ret/lib/util.js"],"names":["module","exports","ROOT","GROUP","POSITION","SET","RANGE","REPETITION","REFERENCE","CHAR","ret","require","DRange","types","regexp","m","_setDefaults","RegExp","ignoreCase","multiline","source","indexOf","Error","tokens","max","RandExp","prototype","defaultRange","clone","randInt","_gen","token","groups","stack","str","n","i","l","type","followedBy","notFollowedBy","remember","groupNumber","undefined","push","options","_randSelect","length","expandedSet","_expand","String","fromCharCode","min","Infinity","value","code","_randBool","_toOtherCase","arr","index","from","to","drange","set","subrange","add","j","otherCaseCode","not","subtract","intersect","a","b","Math","floor","random","_range","range","randexp","_randexp","gen","util","sets","positions","regexpStr","c","start","lastGroup","last","groupStack","repeatErr","error","strToChars","wordBoundary","nonWordBoundary","words","notWords","ints","notInts","whitespace","notWhitespace","test","parseInt","charCodeAt","begin","end","classTokens","tokenizeClass","slice","anyChar","group","pop","rs","exec","SubRange","low","high","toString","ranges","reduce","previous","_add","touches","newRanges","concat","_update_length","forEach","_subtract","overlaps","_intersect","join","result","map","INTS","WORDS","WHITESPACE","NOTANYCHAR","CTRL","SLSH","chars_regex","replace","s","lbs","a16","b16","c8","dctrl","eslsh","lastIndex","msg","SyntaxError"],"mappings":"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","file":"default~modules-my-profile-my-profile-module~modules-security-security-module~modules-user-managment~bbd46909.js","sourcesContent":["module.exports = {\n  ROOT       : 0,\n  GROUP      : 1,\n  POSITION   : 2,\n  SET        : 3,\n  RANGE      : 4,\n  REPETITION : 5,\n  REFERENCE  : 6,\n  CHAR       : 7,\n};\n","import { Component, OnChanges, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\n\n@Component({\n      selector: 'app-password-strength',\n      templateUrl: './password-strength.component.html',\n      styleUrls: ['./password-strength.component.css']\n})\n\nexport class PasswordStrengthComponent implements OnChanges {\n\n      @Input() passwordToCheck: string;\n      @Input() barLabel: string;\n      @Output() validpass: EventEmitter<boolean> = new EventEmitter<boolean>();\n      bar0: string;\n      bar1: string;\n      bar2: string;\n      bar3: string;\n      bar4: string;\n      result:boolean;\n\n      public colors = ['#F00', '#F90', '#FF0', '#9F0', '#0F0'];\n\n      public static measureStrength(pass: string) {\n            // console.log(\"measureStrength \"+pass);\n            let score = 0;\n            // award every unique letter until 5 repetitions  \n            // let letters = {};\n            // for (let i = 0; i < pass.length; i++) {\n            //       console.log(\"letters pass i: \"+letters[pass[i]]);\n            //       letters[pass[i]] = (letters[pass[i]] || 0) + 1;\n            //       score += 5.0 / letters[pass[i]];\n            //       console.log(\"score: \"+score);\n            // }\n            score += pass.length * 5;//minimo 8 caracteres * 5 = 40 puntos\n            // console.log(\"Puntos por longitud: \"+score);\n            if(score > 40)\n                  score = 40;\n            // console.log(\"Puntos por longitud después de control máximo: \"+score);\n\n            // bonus points for mixing it up  \n            let variations = {\n                  digits: /\\d/.test(pass),\n                  lower: /[a-z]/.test(pass),\n                  upper: /[A-Z]/.test(pass),\n                  nonWords:/[^A-Za-z0-9]/.test(pass),\n                  // nonWords: /\\W/.test(pass),\n            };\n            let variationCount = 0;\n            for (let check in variations) {\n                  // console.log(check +\" - \"+ variations[check]);\n                  variationCount += (variations[check]) ? 1 : 0;\n            }\n            // score += (variationCount - 1) * 10;\n            score += variationCount * 15;\n\n            //Controlamos minimos de seguridad y rebajamos el score para que no cumpla requisitos\n            if(score >= 85 && (variationCount < 3 || pass.length < 8))\n                  score = 80;\n\n            var result = Math.trunc(score);\n            // console.log(\"result - measureStrength: \"+result);\n            return result;\n      }\n\n      public getColor(score: number) {\n            // console.log(\"getColor \"+score);\n            let idx = 0;\n            if (score > 85) {\n                  idx = 4;\n            }else if (score >= 80) {\n                  idx = 3;\n            } else if (score >= 60) {\n                  idx = 2;\n            } else if (score >= 40) {\n                  idx = 1;\n            } else if (score < 20) {\n                  idx = 0;\n            }\n            // console.log(\"getColor \"+(idx + 1));\n            // console.log(\"getColor \"+this.colors[idx]);\n            return {\n                  idx: idx + 1,\n                  col: this.colors[idx]\n            };\n      }\n\n      ngOnChanges(changes: SimpleChanges): void {\n            // console.log(\"ngOnChanges\");\n            // console.log(changes);\n            var password = changes['passwordToCheck'].currentValue;\n            this.setBarColors(5, '#DDD');\n            if (password) {\n                  let c = this.getColor(PasswordStrengthComponent.measureStrength(password));\n                  this.setBarColors(c.idx, c.col);\n                  if (c.idx == 5 || c.idx == 4) //nivel de fuerza 4 o 5 es aceptable\n                  { \n                        this.result = true;\n                  } \n                  else\n                  { \n                        this.result = false;\n                  }\n                  this.checkpass();\n            }\n      }\n\n      public checkpass() {\n            // console.log(\"checkpass: \"+this.result);\n            this.validpass.emit(this.result);\n      }\n\n      public setBarColors(count, col) {  \n            // console.log(\"setBarColors \"+count);\n            // console.log(\"setBarColors \"+col);\n            for (let _n = 0; _n < count; _n++) {  \n                  this['bar' + _n] = col;  \n            }  \n      } \n\n}\n","<div id=\"strength\" #strength>\n    <small class=\"strength-small\">{{'CONTRASENA_MESSAGE'  | translate}}</small>\n    <ul id=\"strengthBar\" style=\"text-align: center;width: 100%;\">  \n        <li class=\"point\" [style.background-color]=\"bar0\"></li>\n        <li class=\"point\" [style.background-color]=\"bar1\"></li>\n        <li class=\"point\" [style.background-color]=\"bar2\"></li>\n        <li class=\"point\" [style.background-color]=\"bar3\"></li>\n        <li class=\"point\" [style.background-color]=\"bar4\"></li>  \n    </ul> \n</div>  ","const ret    = require('ret');\nconst DRange = require('drange');\nconst types  = ret.types;\n\n\nmodule.exports = class RandExp {\n  /**\n   * @constructor\n   * @param {RegExp|String} regexp\n   * @param {String} m\n   */\n  constructor(regexp, m) {\n    this._setDefaults(regexp);\n    if (regexp instanceof RegExp) {\n      this.ignoreCase = regexp.ignoreCase;\n      this.multiline = regexp.multiline;\n      regexp = regexp.source;\n\n    } else if (typeof regexp === 'string') {\n      this.ignoreCase = m && m.indexOf('i') !== -1;\n      this.multiline = m && m.indexOf('m') !== -1;\n    } else {\n      throw new Error('Expected a regexp or string');\n    }\n\n    this.tokens = ret(regexp);\n  }\n\n\n  /**\n   * Checks if some custom properties have been set for this regexp.\n   *\n   * @param {RandExp} randexp\n   * @param {RegExp} regexp\n   */\n  _setDefaults(regexp) {\n    // When a repetitional token has its max set to Infinite,\n    // randexp won't actually generate a random amount between min and Infinite\n    // instead it will see Infinite as min + 100.\n    this.max = regexp.max != null ? regexp.max :\n      RandExp.prototype.max != null ? RandExp.prototype.max : 100;\n\n    // This allows expanding to include additional characters\n    // for instance: RandExp.defaultRange.add(0, 65535);\n    this.defaultRange = regexp.defaultRange ?\n      regexp.defaultRange : this.defaultRange.clone();\n\n    if (regexp.randInt) {\n      this.randInt = regexp.randInt;\n    }\n  }\n\n\n  /**\n   * Generates the random string.\n   *\n   * @return {String}\n   */\n  gen() {\n    return this._gen(this.tokens, []);\n  }\n\n\n  /**\n   * Generate random string modeled after given tokens.\n   *\n   * @param {Object} token\n   * @param {Array.<String>} groups\n   * @return {String}\n   */\n  _gen(token, groups) {\n    var stack, str, n, i, l;\n\n    switch (token.type) {\n      case types.ROOT:\n      case types.GROUP:\n        // Ignore lookaheads for now.\n        if (token.followedBy || token.notFollowedBy) { return ''; }\n\n        // Insert placeholder until group string is generated.\n        if (token.remember && token.groupNumber === undefined) {\n          token.groupNumber = groups.push(null) - 1;\n        }\n\n        stack = token.options ?\n          this._randSelect(token.options) : token.stack;\n\n        str = '';\n        for (i = 0, l = stack.length; i < l; i++) {\n          str += this._gen(stack[i], groups);\n        }\n\n        if (token.remember) {\n          groups[token.groupNumber] = str;\n        }\n        return str;\n\n      case types.POSITION:\n        // Do nothing for now.\n        return '';\n\n      case types.SET:\n        var expandedSet = this._expand(token);\n        if (!expandedSet.length) { return ''; }\n        return String.fromCharCode(this._randSelect(expandedSet));\n\n      case types.REPETITION:\n        // Randomly generate number between min and max.\n        n = this.randInt(token.min,\n          token.max === Infinity ? token.min + this.max : token.max);\n\n        str = '';\n        for (i = 0; i < n; i++) {\n          str += this._gen(token.value, groups);\n        }\n\n        return str;\n\n      case types.REFERENCE:\n        return groups[token.value - 1] || '';\n\n      case types.CHAR:\n        var code = this.ignoreCase && this._randBool() ?\n          this._toOtherCase(token.value) : token.value;\n        return String.fromCharCode(code);\n    }\n  }\n\n\n  /**\n   * If code is alphabetic, converts to other case.\n   * If not alphabetic, returns back code.\n   *\n   * @param {Number} code\n   * @return {Number}\n   */\n  _toOtherCase(code) {\n    return code + (97 <= code && code <= 122 ? -32 :\n      65 <= code && code <= 90  ?  32 : 0);\n  }\n\n\n  /**\n   * Randomly returns a true or false value.\n   *\n   * @return {Boolean}\n   */\n  _randBool() {\n    return !this.randInt(0, 1);\n  }\n\n\n  /**\n   * Randomly selects and returns a value from the array.\n   *\n   * @param {Array.<Object>} arr\n   * @return {Object}\n   */\n  _randSelect(arr) {\n    if (arr instanceof DRange) {\n      return arr.index(this.randInt(0, arr.length - 1));\n    }\n    return arr[this.randInt(0, arr.length - 1)];\n  }\n\n\n  /**\n   * expands a token to a DiscontinuousRange of characters which has a\n   * length and an index function (for random selecting)\n   *\n   * @param {Object} token\n   * @return {DiscontinuousRange}\n   */\n  _expand(token) {\n    if (token.type === ret.types.CHAR) {\n      return new DRange(token.value);\n    } else if (token.type === ret.types.RANGE) {\n      return new DRange(token.from, token.to);\n    } else {\n      let drange = new DRange();\n      for (let i = 0; i < token.set.length; i++) {\n        let subrange = this._expand(token.set[i]);\n        drange.add(subrange);\n        if (this.ignoreCase) {\n          for (let j = 0; j < subrange.length; j++) {\n            let code = subrange.index(j);\n            let otherCaseCode = this._toOtherCase(code);\n            if (code !== otherCaseCode) {\n              drange.add(otherCaseCode);\n            }\n          }\n        }\n      }\n      if (token.not) {\n        return this.defaultRange.clone().subtract(drange);\n      } else {\n        return this.defaultRange.clone().intersect(drange);\n      }\n    }\n  }\n\n\n  /**\n   * Randomly generates and returns a number between a and b (inclusive).\n   *\n   * @param {Number} a\n   * @param {Number} b\n   * @return {Number}\n   */\n  randInt(a, b) {\n    return a + Math.floor(Math.random() * (1 + b - a));\n  }\n\n\n  /**\n   * Default range of characters to generate from.\n   */\n  get defaultRange() {\n    return this._range = this._range || new DRange(32, 126);\n  }\n\n  set defaultRange(range) {\n    this._range = range;\n  }\n\n\n  /**\n   *\n   * Enables use of randexp with a shorter call.\n   *\n   * @param {RegExp|String| regexp}\n   * @param {String} m\n   * @return {String}\n   */\n  static randexp(regexp, m) {\n    var randexp;\n    if(typeof regexp === 'string') {\n      regexp = new RegExp(regexp, m);\n    }\n\n    if (regexp._randexp === undefined) {\n      randexp = new RandExp(regexp, m);\n      regexp._randexp = randexp;\n    } else {\n      randexp = regexp._randexp;\n      randexp._setDefaults(regexp);\n    }\n    return randexp.gen();\n  }\n\n\n  /**\n   * Enables sugary /regexp/.gen syntax.\n   */\n  static sugar() {\n    /* eshint freeze:false */\n    RegExp.prototype.gen = function() {\n      return RandExp.randexp(this);\n    };\n  }\n};\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","const util      = require('./util');\nconst types     = require('./types');\nconst sets      = require('./sets');\nconst positions = require('./positions');\n\n\nmodule.exports = (regexpStr) => {\n  var i = 0, l, c,\n    start = { type: types.ROOT, stack: []},\n\n    // Keep track of last clause/group and stack.\n    lastGroup = start,\n    last = start.stack,\n    groupStack = [];\n\n\n  var repeatErr = (i) => {\n    util.error(regexpStr, `Nothing to repeat at column ${i - 1}`);\n  };\n\n  // Decode a few escaped characters.\n  var str = util.strToChars(regexpStr);\n  l = str.length;\n\n  // Iterate through each character in string.\n  while (i < l) {\n    c = str[i++];\n\n    switch (c) {\n      // Handle escaped characters, inclues a few sets.\n      case '\\\\':\n        c = str[i++];\n\n        switch (c) {\n          case 'b':\n            last.push(positions.wordBoundary());\n            break;\n\n          case 'B':\n            last.push(positions.nonWordBoundary());\n            break;\n\n          case 'w':\n            last.push(sets.words());\n            break;\n\n          case 'W':\n            last.push(sets.notWords());\n            break;\n\n          case 'd':\n            last.push(sets.ints());\n            break;\n\n          case 'D':\n            last.push(sets.notInts());\n            break;\n\n          case 's':\n            last.push(sets.whitespace());\n            break;\n\n          case 'S':\n            last.push(sets.notWhitespace());\n            break;\n\n          default:\n            // Check if c is integer.\n            // In which case it's a reference.\n            if (/\\d/.test(c)) {\n              last.push({ type: types.REFERENCE, value: parseInt(c, 10) });\n\n            // Escaped character.\n            } else {\n              last.push({ type: types.CHAR, value: c.charCodeAt(0) });\n            }\n        }\n\n        break;\n\n\n      // Positionals.\n      case '^':\n        last.push(positions.begin());\n        break;\n\n      case '$':\n        last.push(positions.end());\n        break;\n\n\n      // Handle custom sets.\n      case '[':\n        // Check if this class is 'anti' i.e. [^abc].\n        var not;\n        if (str[i] === '^') {\n          not = true;\n          i++;\n        } else {\n          not = false;\n        }\n\n        // Get all the characters in class.\n        var classTokens = util.tokenizeClass(str.slice(i), regexpStr);\n\n        // Increase index by length of class.\n        i += classTokens[1];\n        last.push({\n          type: types.SET,\n          set: classTokens[0],\n          not,\n        });\n\n        break;\n\n\n      // Class of any character except \\n.\n      case '.':\n        last.push(sets.anyChar());\n        break;\n\n\n      // Push group onto stack.\n      case '(':\n        // Create group.\n        var group = {\n          type: types.GROUP,\n          stack: [],\n          remember: true,\n        };\n\n        c = str[i];\n\n        // If if this is a special kind of group.\n        if (c === '?') {\n          c = str[i + 1];\n          i += 2;\n\n          // Match if followed by.\n          if (c === '=') {\n            group.followedBy = true;\n\n          // Match if not followed by.\n          } else if (c === '!') {\n            group.notFollowedBy = true;\n\n          } else if (c !== ':') {\n            util.error(regexpStr,\n              `Invalid group, character '${c}'` +\n              ` after '?' at column ${i - 1}`);\n          }\n\n          group.remember = false;\n        }\n\n        // Insert subgroup into current group stack.\n        last.push(group);\n\n        // Remember the current group for when the group closes.\n        groupStack.push(lastGroup);\n\n        // Make this new group the current group.\n        lastGroup = group;\n        last = group.stack;\n        break;\n\n\n      // Pop group out of stack.\n      case ')':\n        if (groupStack.length === 0) {\n          util.error(regexpStr, `Unmatched ) at column ${i - 1}`);\n        }\n        lastGroup = groupStack.pop();\n\n        // Check if this group has a PIPE.\n        // To get back the correct last stack.\n        last = lastGroup.options ?\n          lastGroup.options[lastGroup.options.length - 1] : lastGroup.stack;\n        break;\n\n\n      // Use pipe character to give more choices.\n      case '|':\n        // Create array where options are if this is the first PIPE\n        // in this clause.\n        if (!lastGroup.options) {\n          lastGroup.options = [lastGroup.stack];\n          delete lastGroup.stack;\n        }\n\n        // Create a new stack and add to options for rest of clause.\n        var stack = [];\n        lastGroup.options.push(stack);\n        last = stack;\n        break;\n\n\n      // Repetition.\n      // For every repetition, remove last element from last stack\n      // then insert back a RANGE object.\n      // This design is chosen because there could be more than\n      // one repetition symbols in a regex i.e. `a?+{2,3}`.\n      case '{':\n        var rs = /^(\\d+)(,(\\d+)?)?\\}/.exec(str.slice(i)), min, max;\n        if (rs !== null) {\n          if (last.length === 0) {\n            repeatErr(i);\n          }\n          min = parseInt(rs[1], 10);\n          max = rs[2] ? rs[3] ? parseInt(rs[3], 10) : Infinity : min;\n          i += rs[0].length;\n\n          last.push({\n            type: types.REPETITION,\n            min,\n            max,\n            value: last.pop(),\n          });\n        } else {\n          last.push({\n            type: types.CHAR,\n            value: 123,\n          });\n        }\n        break;\n\n      case '?':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n          type: types.REPETITION,\n          min: 0,\n          max: 1,\n          value: last.pop(),\n        });\n        break;\n\n      case '+':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n          type: types.REPETITION,\n          min: 1,\n          max: Infinity,\n          value: last.pop(),\n        });\n        break;\n\n      case '*':\n        if (last.length === 0) {\n          repeatErr(i);\n        }\n        last.push({\n          type: types.REPETITION,\n          min: 0,\n          max: Infinity,\n          value: last.pop(),\n        });\n        break;\n\n\n      // Default is a character that is not `\\[](){}?+*^$`.\n      default:\n        last.push({\n          type: types.CHAR,\n          value: c.charCodeAt(0),\n        });\n    }\n\n  }\n\n  // Check if any groups have not been closed.\n  if (groupStack.length !== 0) {\n    util.error(regexpStr, 'Unterminated group');\n  }\n\n  return start;\n};\n\nmodule.exports.types = types;\n","const types = require('./types');\nexports.wordBoundary = () => ({ type: types.POSITION, value: 'b' });\nexports.nonWordBoundary = () => ({ type: types.POSITION, value: 'B' });\nexports.begin = () => ({ type: types.POSITION, value: '^' });\nexports.end = () => ({ type: types.POSITION, value: '$' });\n","'use strict';\n/* eslint indent: 4 */\n\n\n// Private helper class\nclass SubRange {\n    constructor(low, high) {\n        this.low = low;\n        this.high = high;\n        this.length = 1 + high - low;\n    }\n\n    overlaps(range) {\n        return !(this.high < range.low || this.low > range.high);\n    }\n\n    touches(range) {\n        return !(this.high + 1 < range.low || this.low - 1 > range.high);\n    }\n\n    // Returns inclusive combination of SubRanges as a SubRange.\n    add(range) {\n        return new SubRange(\n            Math.min(this.low, range.low),\n            Math.max(this.high, range.high)\n        );\n    }\n\n    // Returns subtraction of SubRanges as an array of SubRanges.\n    // (There's a case where subtraction divides it in 2)\n    subtract(range) {\n        if (range.low <= this.low && range.high >= this.high) {\n            return [];\n        } else if (range.low > this.low && range.high < this.high) {\n            return [\n                new SubRange(this.low, range.low - 1),\n                new SubRange(range.high + 1, this.high)\n            ];\n        } else if (range.low <= this.low) {\n            return [new SubRange(range.high + 1, this.high)];\n        } else {\n            return [new SubRange(this.low, range.low - 1)];\n        }\n    }\n\n    toString() {\n        return this.low == this.high ?\n            this.low.toString() : this.low + '-' + this.high;\n    }\n}\n\n\nclass DRange {\n    constructor(a, b) {\n        this.ranges = [];\n        this.length = 0;\n        if (a != null) this.add(a, b);\n    }\n\n    _update_length() {\n        this.length = this.ranges.reduce((previous, range) => {\n            return previous + range.length;\n        }, 0);\n    }\n\n    add(a, b) {\n        var _add = (subrange) => {\n            var i = 0;\n            while (i < this.ranges.length && !subrange.touches(this.ranges[i])) {\n                i++;\n            }\n            var newRanges = this.ranges.slice(0, i);\n            while (i < this.ranges.length && subrange.touches(this.ranges[i])) {\n                subrange = subrange.add(this.ranges[i]);\n                i++;\n            }\n            newRanges.push(subrange);\n            this.ranges = newRanges.concat(this.ranges.slice(i));\n            this._update_length();\n        }\n\n        if (a instanceof DRange) {\n            a.ranges.forEach(_add);\n        } else {\n            if (b == null) b = a;\n            _add(new SubRange(a, b));\n        }\n        return this;\n    }\n\n    subtract(a, b) {\n        var _subtract = (subrange) => {\n            var i = 0;\n            while (i < this.ranges.length && !subrange.overlaps(this.ranges[i])) {\n                i++;\n            }\n            var newRanges = this.ranges.slice(0, i);\n            while (i < this.ranges.length && subrange.overlaps(this.ranges[i])) {\n                newRanges = newRanges.concat(this.ranges[i].subtract(subrange));\n                i++;\n            }\n            this.ranges = newRanges.concat(this.ranges.slice(i));\n            this._update_length();\n        };\n\n        if (a instanceof DRange) {\n            a.ranges.forEach(_subtract);\n        } else {\n            if (b == null) b = a;\n            _subtract(new SubRange(a, b));\n        }\n        return this;\n    }\n\n    intersect(a, b) {\n        var newRanges = [];\n        var _intersect = (subrange) => {\n            var i = 0;\n            while (i < this.ranges.length && !subrange.overlaps(this.ranges[i])) {\n                i++;\n            }\n            while (i < this.ranges.length && subrange.overlaps(this.ranges[i])) {\n                var low = Math.max(this.ranges[i].low, subrange.low);\n                var high = Math.min(this.ranges[i].high, subrange.high);\n                newRanges.push(new SubRange(low, high));\n                i++;\n            }\n        };\n\n        if (a instanceof DRange) {\n            a.ranges.forEach(_intersect);\n        } else {\n            if (b == null) b = a;\n            _intersect(new SubRange(a, b));\n        }\n        this.ranges = newRanges;\n        this._update_length();\n        return this;\n    }\n\n    index(index) {\n        var i = 0;\n        while (i < this.ranges.length && this.ranges[i].length <= index) {\n            index -= this.ranges[i].length;\n            i++;\n        }\n        return this.ranges[i].low + index;\n    }\n\n    toString() {\n        return '[ ' + this.ranges.join(', ') + ' ]';\n    }\n\n    clone() {\n        return new DRange(this);\n    }\n\n    numbers() {\n        return this.ranges.reduce((result, subrange) => {\n            var i = subrange.low;\n            while (i <= subrange.high) {\n                result.push(i);\n                i++;\n            }\n            return result;\n        }, []);\n    }\n\n    subranges() {\n        return this.ranges.map((subrange) => ({\n            low: subrange.low,\n            high: subrange.high,\n            length: 1 + subrange.high - subrange.low\n        }));\n    }\n}\n\nmodule.exports = DRange;\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","const types = require('./types');\n\nconst INTS = () => [{ type: types.RANGE , from: 48, to: 57 }];\n\nconst WORDS = () => {\n  return [\n    { type: types.CHAR, value: 95 },\n    { type: types.RANGE, from: 97, to: 122 },\n    { type: types.RANGE, from: 65, to: 90 }\n  ].concat(INTS());\n};\n\nconst WHITESPACE = () => {\n  return [\n    { type: types.CHAR, value: 9 },\n    { type: types.CHAR, value: 10 },\n    { type: types.CHAR, value: 11 },\n    { type: types.CHAR, value: 12 },\n    { type: types.CHAR, value: 13 },\n    { type: types.CHAR, value: 32 },\n    { type: types.CHAR, value: 160 },\n    { type: types.CHAR, value: 5760 },\n    { type: types.RANGE, from: 8192, to: 8202 },\n    { type: types.CHAR, value: 8232 },\n    { type: types.CHAR, value: 8233 },\n    { type: types.CHAR, value: 8239 },\n    { type: types.CHAR, value: 8287 },\n    { type: types.CHAR, value: 12288 },\n    { type: types.CHAR, value: 65279 }\n  ];\n};\n\nconst NOTANYCHAR = () => {\n  return [\n    { type: types.CHAR, value: 10 },\n    { type: types.CHAR, value: 13 },\n    { type: types.CHAR, value: 8232 },\n    { type: types.CHAR, value: 8233 },\n  ];\n};\n\n// Predefined class objects.\nexports.words = () => ({ type: types.SET, set: WORDS(), not: false });\nexports.notWords = () => ({ type: types.SET, set: WORDS(), not: true });\nexports.ints = () => ({ type: types.SET, set: INTS(), not: false });\nexports.notInts = () => ({ type: types.SET, set: INTS(), not: true });\nexports.whitespace = () => ({ type: types.SET, set: WHITESPACE(), not: false });\nexports.notWhitespace = () => ({ type: types.SET, set: WHITESPACE(), not: true });\nexports.anyChar = () => ({ type: types.SET, set: NOTANYCHAR(), not: true });\n","const types = require('./types');\nconst sets  = require('./sets');\n\n\nconst CTRL = '@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^ ?';\nconst SLSH = { '0': 0, 't': 9, 'n': 10, 'v': 11, 'f': 12, 'r': 13 };\n\n/**\n * Finds character representations in str and convert all to\n * their respective characters\n *\n * @param {String} str\n * @return {String}\n */\nexports.strToChars = function(str) {\n  /* jshint maxlen: false */\n  var chars_regex = /(\\[\\\\b\\])|(\\\\)?\\\\(?:u([A-F0-9]{4})|x([A-F0-9]{2})|(0?[0-7]{2})|c([@A-Z[\\\\\\]^?])|([0tnvfr]))/g;\n  str = str.replace(chars_regex, function(s, b, lbs, a16, b16, c8, dctrl, eslsh) {\n    if (lbs) {\n      return s;\n    }\n\n    var code = b ? 8 :\n      a16   ? parseInt(a16, 16) :\n      b16   ? parseInt(b16, 16) :\n      c8    ? parseInt(c8,   8) :\n      dctrl ? CTRL.indexOf(dctrl) :\n      SLSH[eslsh];\n\n    var c = String.fromCharCode(code);\n\n    // Escape special regex characters.\n    if (/[[\\]{}^$.|?*+()]/.test(c)) {\n      c = '\\\\' + c;\n    }\n\n    return c;\n  });\n\n  return str;\n};\n\n\n/**\n * turns class into tokens\n * reads str until it encounters a ] not preceeded by a \\\n *\n * @param {String} str\n * @param {String} regexpStr\n * @return {Array.<Array.<Object>, Number>}\n */\nexports.tokenizeClass = (str, regexpStr) => {\n  /* jshint maxlen: false */\n  var tokens = [];\n  var regexp = /\\\\(?:(w)|(d)|(s)|(W)|(D)|(S))|((?:(?:\\\\)(.)|([^\\]\\\\]))-(?:\\\\)?([^\\]]))|(\\])|(?:\\\\)?([^])/g;\n  var rs, c;\n\n\n  while ((rs = regexp.exec(str)) != null) {\n    if (rs[1]) {\n      tokens.push(sets.words());\n\n    } else if (rs[2]) {\n      tokens.push(sets.ints());\n\n    } else if (rs[3]) {\n      tokens.push(sets.whitespace());\n\n    } else if (rs[4]) {\n      tokens.push(sets.notWords());\n\n    } else if (rs[5]) {\n      tokens.push(sets.notInts());\n\n    } else if (rs[6]) {\n      tokens.push(sets.notWhitespace());\n\n    } else if (rs[7]) {\n      tokens.push({\n        type: types.RANGE,\n        from: (rs[8] || rs[9]).charCodeAt(0),\n        to: rs[10].charCodeAt(0),\n      });\n\n    } else if ((c = rs[12])) {\n      tokens.push({\n        type: types.CHAR,\n        value: c.charCodeAt(0),\n      });\n\n    } else {\n      return [tokens, regexp.lastIndex];\n    }\n  }\n\n  exports.error(regexpStr, 'Unterminated character class');\n};\n\n\n/**\n * Shortcut to throw errors.\n *\n * @param {String} regexp\n * @param {String} msg\n */\nexports.error = (regexp, msg) => {\n  throw new SyntaxError('Invalid regular expression: /' + regexp + '/: ' + msg);\n};\n"],"sourceRoot":"webpack:///"}